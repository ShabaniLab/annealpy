# -*- coding: utf-8 -*-
# -----------------------------------------------------------------------------
# Copyright 2018 by AnnealPy Authors, see AUTHORS for more details.
#
# Distributed under the terms of the BSD 3-Clause license.
#
# The full license is in the file LICENCE, distributed with this software.
# -----------------------------------------------------------------------------
"""Main window of the AnnealPy application.

"""
from enaml.widgets.api import (MainWindow, DockArea, MenuBar, Menu, Action,
                               FileDialogEx, StatusBar, Container)
from enaml.layout.api import HSplitLayout

from .daq.daq_control_panel import DAQDialog
from .plotting.plotting_dock import PlottingDockItem
from .process_dock import ProcessDockItem


enamldef AppWindow(MainWindow): main:
    """Main window of the annealer control application.

    """
    attr app_state

    title = 'Annealer controller'

    initial_size = (1600, 800)

    MenuBar:
        Menu:
            title = 'Process'
            Action:
                text = 'Save\tCtrl+S'
                triggered::
                    process_item.save()
            Action: save_as:
                text = 'Save as'
                triggered::
                    process_item.save_as()
            Action:
                text = 'Load'
                triggered::
                    process_item.load()

        Menu:
            title = 'DAQ'
            Action:
                text = 'Select config file'
                triggered::
                    pass
            Action:
                text = 'Open test dialog'
                triggered::
                    DAQDialog(main).exec_()

    StatusBar: status:
        pass

    Container:
        DockArea:
            layout = HSplitLayout('process_item', 'plotting_item',
                                  sizes=[800, 1600])

            ProcessDockItem: process_item:
                name = 'process_item'
                process << app_state.process
            PlottingDockItem:
                name = 'plotting_item'
                app_state = main.app_state

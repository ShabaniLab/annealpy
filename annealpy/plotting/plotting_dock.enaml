# -*- coding: utf-8 -*-
# -----------------------------------------------------------------------------
# Copyright 2018 by AnnealPy Authors, see AUTHORS for more details.
#
# Distributed under the terms of the BSD 3-Clause license.
#
# The full license is in the file LICENCE, distributed with this software.
# -----------------------------------------------------------------------------
"""Dock item embedding a plot of the currently running or last run process.

"""
from enaml.layout.api import hbox, vbox, spacer
from enaml.widgets.api import DockItem, Container, CheckBox

from .pyqtgraph_widget import DualAxisPyqtGraphWidget


enamldef PlottingDockItem(DockItem): main:
    """Dock item embedding a plot of the currently running or last run process.

    """
    #: State of the application driving the plot
    attr app_state

    closable = False

    activated::
        temp_plot.add_plot('temperature')
        heater_plot.add_plot('heater_switch')
        heater_plot.add_plot('heater_regulation')
        app_state.observe('plot_update', temp_plot._update_plots)
        app_state.observe('plot_update', heater_plot._update_plots)

    Container:

        constraints << ([vbox(temp_plot.when(temp_plot.visible),
                              heater_plot.when(heater_plot.visible),
                              hbox(t_ch, spacer, s_ch, spacer, r_ch))
                         ] +
                         ([temp_plot.height == heater_plot.height]
                           if temp_plot.visible and heater_plot.visible else
                           [])
                        )

        DualAxisPyqtGraphWidget: temp_plot:
            app_state = main.app_state
            visible << t_ch.checked

        DualAxisPyqtGraphWidget: heater_plot:
            app_state = main.app_state
            visible << s_ch.checked or r_ch.checked

        CheckBox: t_ch:
            text = 'Temperature'
            checked = True

        CheckBox: s_ch:
            text = 'Heater switch'
            checked = True
            toggled::
                if checked:
                    plot.add_plot('heater_switch')
                else:
                    plot.remove_plot('heater_switch')

        CheckBox: r_ch:
            text = 'Heater regulation'
            checked = True
            toggled::
                if checked:
                    plot.add_plot('heater_regulation')
                else:
                    plot.remove_plot('heater_regulation')
